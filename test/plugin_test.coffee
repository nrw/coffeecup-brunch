describe "Plugin", ->
  plugin = undefined
  beforeEach ->
    plugin = new Plugin({})

  it "should be an object", ->
    expect(plugin).to.be.ok

  it "should has #compile method", ->
    expect(plugin.compile).to.be.an.instanceof Function

  it "should compile and produce valid result", (done) ->
    content = 'h1 "la la la"'
    expected = 'module.exports = function anonymous(data) {\nvar a,h1,i,u;a = function(){return __cc.tag(\'a\', arguments);};h1 = function(){return __cc.tag(\'h1\', arguments);};i = function(){return __cc.tag(\'i\', arguments);};u = function(){return __cc.tag(\'u\', arguments);};var __slice = Array.prototype.slice;var __hasProp = Object.prototype.hasOwnProperty;var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };var __extends = function(child, parent) {  for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; }  function ctor() { this.constructor = child; }  ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype;  return child; };var __indexOf = Array.prototype.indexOf || function(item) {  for (var i = 0, l = this.length; i < l; i++) {    if (this[i] === item) return i;  } return -1; };\n  var cede, coffeescript, comment, doctype, h, ie, stylus, tag, text, __cc, _ref, _ref1;\n  if (data == null) {\n    data = {};\n  }\n  if ((_ref = data.format) == null) {\n    data.format = false;\n  }\n  if ((_ref1 = data.autoescape) == null) {\n    data.autoescape = false;\n  }\n  __cc = {\n    buffer: [],\n    esc: function(txt) {\n      if (data.autoescape) {\n        return h(txt);\n      } else {\n        return txt.toString();\n      }\n    },\n    tabs: 0,\n    repeat: function(string, count) {\n      return Array(count + 1).join(string);\n    },\n    indent: function() {\n      if (data.format) {\n        return text(this.repeat(\'  \', this.tabs));\n      }\n    },\n    tag: function(name, args) {\n      var combo, i, _i, _len;\n      combo = [name];\n      for (_i = 0, _len = args.length; _i < _len; _i++) {\n        i = args[_i];\n        combo.push(i);\n      }\n      return tag.apply(data, combo);\n    },\n    render_idclass: function(str) {\n      var c, classes, i, id, idx, _i, _j, _len, _len1, _ref2;\n      classes = [];\n      _ref2 = str.split(\'.\');\n      for (idx = _i = 0, _len = _ref2.length; _i < _len; idx = ++_i) {\n        i = _ref2[idx];\n        if (i !== \'\') {\n          if (idx === 0 && i.indexOf(\'#\') === 0) {\n            id = i.slice(1);\n          } else {\n            classes.push(i);\n          }\n        }\n      }\n      if (id) {\n        text(" id=\\"" + id + "\\"");\n      }\n      if (classes.length > 0) {\n        text(" class=\\"");\n        for (_j = 0, _len1 = classes.length; _j < _len1; _j++) {\n          c = classes[_j];\n          if (c !== classes[0]) {\n            text(\' \');\n          }\n          text(c);\n        }\n        return text(\'"\');\n      }\n    },\n    render_attrs: function(obj, prefix) {\n      var k, v, _results;\n      if (prefix == null) {\n        prefix = \'\';\n      }\n      _results = [];\n      for (k in obj) {\n        v = obj[k];\n        if (typeof v === \'boolean\' && v) {\n          v = k;\n        }\n        if (typeof v === \'function\') {\n          v = "(" + v + ").call(this);";\n        }\n        if (typeof v === \'object\' && !(v instanceof Array)) {\n          _results.push(this.render_attrs(v, prefix + k + \'-\'));\n        } else if (v || v === 0) {\n          _results.push(text(" " + (prefix + k) + "=\\"" + (this.esc(v)) + "\\""));\n        } else {\n          _results.push(void 0);\n        }\n      }\n      return _results;\n    },\n    render_contents: function(contents, safe) {\n      var result;\n      if (safe == null) {\n        safe = false;\n      }\n      switch (typeof contents) {\n        case \'string\':\n        case \'number\':\n        case \'boolean\':\n          return text(safe ? contents : this.esc(contents));\n        case \'function\':\n          if (data.format) {\n            text(\'\\n\');\n          }\n          this.tabs++;\n          result = contents.call(data);\n          if (typeof result === \'string\') {\n            this.indent();\n            text(safe ? result : this.esc(result));\n            if (data.format) {\n              text(\'\\n\');\n            }\n          }\n          this.tabs--;\n          return this.indent();\n      }\n    },\n    render_tag: function(name, idclass, attrs, inline, contents) {\n      this.indent();\n      text("<" + name);\n      if (idclass) {\n        this.render_idclass(idclass);\n      }\n      if (attrs) {\n        this.render_attrs(attrs);\n      }\n      if (inline) {\n        text(" " + inline);\n      }\n      if (__indexOf.call(this.self_closing, name) >= 0) {\n        text(\' />\');\n        if (data.format) {\n          text(\'\\n\');\n        }\n      } else {\n        text(\'>\');\n        this.render_contents(contents);\n        text("</" + name + ">");\n        if (data.format) {\n          text(\'\\n\');\n        }\n      }\n      return null;\n    }\n  };\n  tag = function() {\n    var a, args, attrs, contents, first, idclass, inline, name, _i, _len;\n    name = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    for (_i = 0, _len = args.length; _i < _len; _i++) {\n      a = args[_i];\n      switch (typeof a) {\n        case \'function\':\n          contents = a;\n          break;\n        case \'object\':\n          attrs = a;\n          break;\n        case \'number\':\n        case \'boolean\':\n          contents = a;\n          break;\n        case \'string\':\n          if (args.length === 1) {\n            contents = a;\n          } else {\n            if (a === args[0]) {\n              first = a.charAt(0);\n              if (first === \'#\' || first === \'.\') {\n                idclass = a.substr(0, a.indexOf(\' \'));\n                inline = a.substr(a.indexOf(\' \') + 1);\n                if (idclass === \'\') {\n                  idclass = inline;\n                  inline = void 0;\n                }\n              } else {\n                inline = a;\n                if (inline === \'\') {\n                  inline = void 0;\n                }\n              }\n            } else {\n              contents = a;\n            }\n          }\n      }\n    }\n    return __cc.render_tag(name, idclass, attrs, inline, contents);\n  };\n  cede = function(f) {\n    var old_buffer, temp_buffer;\n    temp_buffer = [];\n    old_buffer = __cc.buffer;\n    __cc.buffer = temp_buffer;\n    f();\n    __cc.buffer = old_buffer;\n    return temp_buffer.join(\'\');\n  };\n  h = function(txt) {\n    return txt.toString().replace(/&/g, \'&amp;\').replace(/</g, \'&lt;\').replace(/>/g, \'&gt;\').replace(/"/g, \'&quot;\');\n  };\n  doctype = function(type) {\n    if (type == null) {\n      type = \'default\';\n    }\n    text(__cc.doctypes[type]);\n    if (data.format) {\n      return text(\'\\n\');\n    }\n  };\n  text = function(txt) {\n    __cc.buffer.push(txt.toString());\n    return null;\n  };\n  comment = function(cmt) {\n    text("<!--" + cmt + "-->");\n    if (data.format) {\n      return text(\'\\n\');\n    }\n  };\n  coffeescript = function(param) {\n    switch (typeof param) {\n      case \'function\':\n        return script("" + __cc.coffeescript_helpers + "(" + param + ").call(this);");\n      case \'string\':\n        return script({\n          type: \'text/coffeescript\'\n        }, function() {\n          return param;\n        });\n      case \'object\':\n        param.type = \'text/coffeescript\';\n        return script(param);\n    }\n  };\n  stylus = function(s) {\n    if (data.stylus == null) {\n      throw new TemplateError(\'stylus is not available\');\n    }\n    text(\'<style>\');\n    if (data.format) {\n      text(\'\\n\');\n    }\n    data.stylus.render(s, {\n      compress: !data.format\n    }, function(err, css) {\n      if (err) {\n        throw err;\n      }\n      return text(css);\n    });\n    text(\'</style>\');\n    if (data.format) {\n      return text(\'\\n\');\n    }\n  };\n  ie = function(condition, contents) {\n    __cc.indent();\n    text("<!--[if " + condition + "]>");\n    __cc.render_contents(contents);\n    text("<![endif]-->");\n    if (data.format) {\n      return text(\'\\n\');\n    }\n  };\n  __cc.doctypes = {"5":"<!DOCTYPE html>","default":"<!DOCTYPE html>","xml":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\" ?>","transitional":"<!DOCTYPE html PUBLIC \\"-//W3C//DTD XHTML 1.0 Transitional//EN\\" \\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\\">","strict":"<!DOCTYPE html PUBLIC \\"-//W3C//DTD XHTML 1.0 Strict//EN\\" \\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\\">","frameset":"<!DOCTYPE html PUBLIC \\"-//W3C//DTD XHTML 1.0 Frameset//EN\\" \\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd\\">","1.1":"<!DOCTYPE html PUBLIC \\"-//W3C//DTD XHTML 1.1//EN\\" \\"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\\">","basic":"<!DOCTYPE html PUBLIC \\"-//W3C//DTD XHTML Basic 1.1//EN\\" \\"http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd\\">","mobile":"<!DOCTYPE html PUBLIC \\"-//WAPFORUM//DTD XHTML Mobile 1.2//EN\\" \\"http://www.openmobilealliance.org/tech/DTD/xhtml-mobile12.dtd\\">","ce":"<!DOCTYPE html PUBLIC \\"-//W3C//DTD XHTML 1.0 Transitional//EN\\" \\"ce-html-1.0-transitional.dtd\\">"};__cc.coffeescript_helpers = "var __slice = Array.prototype.slice;var __hasProp = Object.prototype.hasOwnProperty;var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };var __extends = function(child, parent) {  for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; }  function ctor() { this.constructor = child; }  ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype;  return child; };var __indexOf = Array.prototype.indexOf || function(item) {  for (var i = 0, l = this.length; i < l; i++) {    if (this[i] === item) return i;  } return -1; };";__cc.self_closing = ["area","base","br","col","command","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","basefont","frame"];(function(){\nh1("la la la");\n}).call(data);return __cc.buffer.join(\'\');\n}'
    
    plugin.compile content, "template.coffeecup", (err, data) ->
      expect(err).not.to.be.ok
      expect(data).to.equal expected
      done()
